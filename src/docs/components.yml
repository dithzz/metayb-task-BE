components:
   schemas:
      User:
         type: object
         properties:
            id:
               type: string
            email:
               type: string
               format: email
            name:
               type: string
            role:
               type: string
               enum: [user, admin]
         example:
            id: 5ebac534954b54139806c112
            email: fake@example.com
            name: fake name
            role: user

      Book:
         type: object
         properties:
            id:
               type: string
            isbn:
               type: string
            title:
               type: string
            brand:
               type: string
            author:
               $ref: '#/components/schemas/Author'
            category:
               type: array
               items:
                  $ref: '#/components/schemas/Category'
            tags:
               type: array
            description:
               type: string
            image:
               type: string
         example:
            id: 5ebac534954b54139806c112
            isbn: fake@example.com
            title: fake name
            brand: user
            author:
            category:
            tags:
            description:
            image:

      Author:
         type: object
         properties:
            id:
               type: string
            name:
               type: string
            age:
               type: string
            dob:
               type: string
            noOfBooks:
               type: number
            blacklisted:
               type: boolean
         example:
            id: 5ebac534954b54139806c112
            name: fake@example.com
            age: fake name
            dob: user
            noOfBooks:
            blacklisted:

      Cart:
         type: object
         properties:
            id:
               type: string
            items:
               $ref: '#/components/schemas/Book'
            promotionApplied:
               type: string
            availableCoupons:
               type: array
               items:
                  $ref: '#/components/schemas/Coupon'
         example:
            id: 5ebac534954b54139806c112
            items: fake@example.com
            promotionApplied: fake name
            availableCoupons: user

      Coupon:
         type: object
         properties:
            id:
               type: string
            name:
               type: string
            startDate:
               type: string
               format: date-time
            endDate:
               type: string
               format: date-time
            description:
               type: string
         example:
            id: 5ebac534954b54139806c112
            name: fake@example.com
            startDate: fake name
            endDate: user
            description: This is a test desc

      Address:
         type: object
         properties:
            id:
               type: string
            line1:
               type: string
            line2:
               type: string
            district:
               type: string
            state:
               type: string
            country:
               type: string
            pincode:
               type: string
            default:
               type: boolean
         example:
            id: 5ebac534954b54139806c112
            line1: fake@example.com
            line2: fake name
            district: user
            state: This is a test desc
            country:
            pincode:
            default:

      Token:
         type: object
         properties:
            token:
               type: string
            expires:
               type: string
               format: date-time
         example:
            token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiI1ZWJhYzUzNDk1NGI1NDEzOTgwNmMxMTIiLCJpYXQiOjE1ODkyOTg0ODQsImV4cCI6MTU4OTMwMDI4NH0.m1U63blB0MLej_WfB7yC2FTMnCziif9X8yzwDEfJXAg
            expires: 2020-05-12T16:18:04.793Z

      AuthTokens:
         type: object
         properties:
            access:
               $ref: '#/components/schemas/Token'
            refresh:
               $ref: '#/components/schemas/Token'

      Error:
         type: object
         properties:
            code:
               type: number
            message:
               type: string

   responses:
      DuplicateEmail:
         description: Email already taken
         content:
            application/json:
               schema:
                  $ref: '#/components/schemas/Error'
               example:
                  code: 400
                  message: Email already taken
      Unauthorized:
         description: Unauthorized
         content:
            application/json:
               schema:
                  $ref: '#/components/schemas/Error'
               example:
                  code: 401
                  message: Please authenticate
      Forbidden:
         description: Forbidden
         content:
            application/json:
               schema:
                  $ref: '#/components/schemas/Error'
               example:
                  code: 403
                  message: Forbidden
      NotFound:
         description: Not found
         content:
            application/json:
               schema:
                  $ref: '#/components/schemas/Error'
               example:
                  code: 404
                  message: Not found

   securitySchemes:
      bearerAuth:
         type: http
         scheme: bearer
         bearerFormat: JWT
